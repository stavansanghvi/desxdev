.animated-border {
  position: relative;
  width: 95%;
  height: 2px;
  background: #000;
  overflow: hidden;
  margin: 0 auto;
}

@property --angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.animated-border.rainbow {
  --angle: 0deg;
  background: linear-gradient(
    90deg,
    #ffb000,
    #e2005c,
    #00b53c,
    #0099dd,
    #ffb000,
    #e2005c,
    #00b53c,
    #0099dd
  );
  mask-image: linear-gradient(
    90deg,
    transparent,
    black 15%,
    black 85%,
    transparent
  );
  -webkit-mask-image: linear-gradient(
    90deg,
    transparent,
    black 15%,
    black 85%,
    transparent
  );
  background-size: 200% 100%;
  animation: moveGradient 5s linear infinite;
}

/* this is to override normal animated border ::before effect */
.animated-border.rainbow::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
      90deg,
      transparent,
      rgba(0, 0, 0, 0) 20%,
      rgba(0, 0, 0, 0) 80%
    ),
    linear-gradient(
      90deg,
      rgba(0, 0, 0, 0) 20%,
      rgba(0, 0, 0, 0) 80%,
      transparent
    );
  pointer-events: none;
}

.animated-border::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background: linear-gradient(to right, #ffffff 33%, #ffffff 66%);
  mask: linear-gradient(
    to right,
    transparent 0%,
    transparent 5%,
    #fff 15%,
    #fff 85%,
    transparent 95%,
    transparent 100%
  );
  -webkit-mask: linear-gradient(
    to right,
    transparent 0%,
    transparent 5%,
    #fff 15%,
    #fff 85%,
    transparent 95%,
    transparent 100%
  );
  /* animation: animateBorder 5s linear infinite; */
}

@keyframes moveGradient {
  from {
    background-position: 100% 0;
  }
  to {
    background-position: 0 0;
  }
}

@keyframes animateBorder {
  0% {
    transform: translateX(0);
  }

  50% {
    transform: translateX(-5%);
  }

  100% {
    transform: translateX(0);
  }
}

/* Hero */

.hero {
  height: calc(100vh - 80px);
  /* height: 100vh; */
}

.hero-moving-div {
  /* clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); */
  animation: movingDiv 5s linear infinite;
}

@keyframes movingDiv {
  0% {
    transform: translateX(2%);
  }

  50% {
    transform: translateX(-2%);
  }

  100% {
    transform: translateX(2%);
  }
}

@media (min-width: 1024px) {
  .hero {
    height: 100vh;
  }
}

/* @media (min-width: 1537px) {
  .hero {
    height: calc(100vh - 140px);
  }
} */

/* Services Grid */

/* Vertical borders */
.grid-item::after {
  content: "";
  position: absolute;
  right: -1px;
  top: 0;
  width: 1px;
  height: 100%;
  background: transparent;
  box-shadow: 0 0 0 0.5px rgba(255, 255, 255, 0.1),
    0 0 0 1px rgba(255, 255, 255, 0.05);
}

/* Center line in vertical borders */
.grid-item .grid-title::after {
  content: "";
  position: absolute;
  right: 0px;
  top: 35%;
  transform: translateY(-50%);
  width: 1px;
  height: 40px;
  background: rgba(255, 255, 255, 1);
  z-index: 10;
}

/* Horizontal borders with different fade directions */
.grid-item:nth-child(1) {
  border-bottom: 1px solid transparent;
  background: linear-gradient(
      to right,
      transparent 0%,
      rgba(255, 255, 255, 0.1) 40%,
      rgba(255, 255, 255, 0.1) 100%
    )
    bottom/100% 1px no-repeat;
}

.grid-item:nth-child(2) {
  border-bottom: 1px solid transparent;
  background: linear-gradient(
      to right,
      rgba(255, 255, 255, 0.1) 0%,
      rgba(255, 255, 255, 0.1) 100%
    )
    bottom/100% 1px no-repeat;
}

.grid-item:nth-child(3) {
  border-bottom: 1px solid transparent;
  background: linear-gradient(
      to right,
      rgba(255, 255, 255, 0.1) 0%,
      rgba(255, 255, 255, 0.1) 60%,
      transparent 100%
    )
    bottom/100% 1px no-repeat;
}

.grid-item:nth-child(3n)::after {
  display: none;
}

.grid-item:nth-child(3n) .grid-title::after {
  display: none;
}

/* Media query for screens smaller than tablet devices */
@media (max-width: 1280px) {
  .grid-item::after {
    top: auto;
    bottom: -1px;
    right: 0;
    width: 100%;
    height: 1px;
    display: block;
    /* Ensure horizontal border is shown */
  }

  .grid-item .grid-title::after {
    top: auto;
    bottom: -24px;
    right: 50%;
    transform: translateX(50%);
    width: 40px;
    height: 1px;
    display: block;
  }

  .grid-item:nth-child(3n)::after {
    display: block;
  }

  .grid-item:nth-child(3n) .grid-title::after {
    display: block;
  }
}
